// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// na_omit
NumericVector na_omit(NumericVector x);
RcppExport SEXP _WRShd_na_omit(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(na_omit(x));
    return rcpp_result_gen;
END_RCPP
}
// hd
double hd(NumericVector x, double q, bool na_rm, int cores);
RcppExport SEXP _WRShd_hd(SEXP xSEXP, SEXP qSEXP, SEXP na_rmSEXP, SEXP coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< bool >::type na_rm(na_rmSEXP);
    Rcpp::traits::input_parameter< int >::type cores(coresSEXP);
    rcpp_result_gen = Rcpp::wrap(hd(x, q, na_rm, cores));
    return rcpp_result_gen;
END_RCPP
}
// hdseb
double hdseb(NumericVector x, double q, int nboot, int cores);
RcppExport SEXP _WRShd_hdseb(SEXP xSEXP, SEXP qSEXP, SEXP nbootSEXP, SEXP coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type nboot(nbootSEXP);
    Rcpp::traits::input_parameter< int >::type cores(coresSEXP);
    rcpp_result_gen = Rcpp::wrap(hdseb(x, q, nboot, cores));
    return rcpp_result_gen;
END_RCPP
}
// hdci
List hdci(NumericVector x, double q, int nboot, bool pr, int cores);
RcppExport SEXP _WRShd_hdci(SEXP xSEXP, SEXP qSEXP, SEXP nbootSEXP, SEXP prSEXP, SEXP coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< int >::type nboot(nbootSEXP);
    Rcpp::traits::input_parameter< bool >::type pr(prSEXP);
    Rcpp::traits::input_parameter< int >::type cores(coresSEXP);
    rcpp_result_gen = Rcpp::wrap(hdci(x, q, nboot, pr, cores));
    return rcpp_result_gen;
END_RCPP
}
// hdpb
List hdpb(NumericVector x, double q, double alpha, int nboot, double nv, int cores);
RcppExport SEXP _WRShd_hdpb(SEXP xSEXP, SEXP qSEXP, SEXP alphaSEXP, SEXP nbootSEXP, SEXP nvSEXP, SEXP coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type nboot(nbootSEXP);
    Rcpp::traits::input_parameter< double >::type nv(nvSEXP);
    Rcpp::traits::input_parameter< int >::type cores(coresSEXP);
    rcpp_result_gen = Rcpp::wrap(hdpb(x, q, alpha, nboot, nv, cores));
    return rcpp_result_gen;
END_RCPP
}
// qcom_sub
List qcom_sub(NumericVector x, NumericVector y, double q, double alpha, int nboot, int cores);
RcppExport SEXP _WRShd_qcom_sub(SEXP xSEXP, SEXP ySEXP, SEXP qSEXP, SEXP alphaSEXP, SEXP nbootSEXP, SEXP coresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< int >::type nboot(nbootSEXP);
    Rcpp::traits::input_parameter< int >::type cores(coresSEXP);
    rcpp_result_gen = Rcpp::wrap(qcom_sub(x, y, q, alpha, nboot, cores));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_WRShd_na_omit", (DL_FUNC) &_WRShd_na_omit, 1},
    {"_WRShd_hd", (DL_FUNC) &_WRShd_hd, 4},
    {"_WRShd_hdseb", (DL_FUNC) &_WRShd_hdseb, 4},
    {"_WRShd_hdci", (DL_FUNC) &_WRShd_hdci, 5},
    {"_WRShd_hdpb", (DL_FUNC) &_WRShd_hdpb, 6},
    {"_WRShd_qcom_sub", (DL_FUNC) &_WRShd_qcom_sub, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_WRShd(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
